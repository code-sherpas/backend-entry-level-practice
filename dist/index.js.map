{"version":3,"sources":["app.js","index.js"],"names":["http","require","fs","path","mimeTypes","app","createServer","request","response","filePath","join","__dirname","url","extname","String","toLowerCase","contentType","readFile","error","content","writeHead","end","code","module","exports","port","listen","console","log"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMC,EAAE,GAAGD,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAME,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AAEA,MAAMG,SAAS,GAAG;EAChB,SAAS,WADO;EAEhB,OAAO,iBAFS;EAGhB,QAAQ,UAHQ;EAIhB,SAAS,kBAJO;EAKhB,QAAQ,WALQ;EAMhB,QAAQ,WANQ;EAOhB,QAAQ,WAPQ;EAQhB,QAAQ,WARQ;EAShB,QAAQ,WATQ;EAUhB,SAAS,uBAVO;EAWhB,QAAQ,sBAXQ;EAYhB,QAAQ,+BAZQ;EAahB,QAAQ,sBAbQ;EAchB,QAAQ;AAdQ,CAAlB;AAiBA,MAAMC,GAAG,GAAGL,IAAI,CAACM,YAAL,CAAkB,CAACC,OAAD,EAAUC,QAAV,KAAuB;EACnD,IAAIC,QAAQ,GAAGN,IAAI,CAACO,IAAL,CAAUC,SAAV,EAAqB,QAArB,EAA+BJ,OAAO,CAACK,GAAvC,CAAf;EACA,IAAIH,QAAQ,KAAKN,IAAI,CAACO,IAAL,CAAUC,SAAV,EAAqB,QAArB,EAA+B,GAA/B,CAAjB,EAAsDF,QAAQ,GAAGN,IAAI,CAACO,IAAL,CAAUC,SAAV,EAAqB,QAArB,EAA+B,YAA/B,CAAX;EAEtD,MAAME,OAAO,GAAGC,MAAM,CAACX,IAAI,CAACU,OAAL,CAAaJ,QAAb,CAAD,CAAN,CAA+BM,WAA/B,EAAhB;EACA,MAAMC,WAAW,GAAGZ,SAAS,CAACS,OAAD,CAAT,IAAsB,0BAA1C;EAEAX,EAAE,CAACe,QAAH,CAAYR,QAAZ,EAAsB,CAACS,KAAD,EAAQC,OAAR,KAAoB;IACxC,IAAID,KAAJ,EAAW;MACTV,QAAQ,CAACY,SAAT,CAAmB,GAAnB;MACAZ,QAAQ,CAACa,GAAT,CAAc,+CAA8CH,KAAK,CAACI,IAAK,OAAvE;MACAd,QAAQ,CAACa,GAAT;IACD,CAJD,MAIO;MACLb,QAAQ,CAACY,SAAT,CAAmB,GAAnB,EAAwB;QAAE,gBAAgBJ;MAAlB,CAAxB;MACAR,QAAQ,CAACa,GAAT,CAAaF,OAAb,EAAsB,OAAtB;IACD;EACF,CATD;AAUD,CAjBW,CAAZ;AAmBAI,MAAM,CAACC,OAAP,GAAiBnB,GAAjB;;ACxCA,MAAMA,GAAG,GAAGJ,OAAO,CAAC,OAAD,CAAnB;;AAEA,MAAMwB,IAAI,GAAG,MAAb;AAEApB,GAAG,CAACqB,MAAJ,CAAWD,IAAX,EAAiB,MAAM;EACrBE,OAAO,CAACC,GAAR,CAAa,+BAA8BH,IAAK,KAAhD;AACD,CAFD","file":"index.js","sourceRoot":"../src","sourcesContent":["const http = require('http');\nconst fs = require('fs');\nconst path = require('path');\n\nconst mimeTypes = {\n  '.html': 'text/html',\n  '.js': 'text/javascript',\n  '.css': 'text/css',\n  '.json': 'application/json',\n  '.png': 'image/png',\n  '.jpg': 'image/jpg',\n  '.gif': 'image/gif',\n  '.wav': 'audio/wav',\n  '.mp4': 'video/mp4',\n  '.woff': 'application/font-woff',\n  '.ttf': 'application/font-ttf',\n  '.eot': 'application/vnd.ms-fontobject',\n  '.otf': 'application/font-otf',\n  '.svg': 'application/image/svg+xml',\n};\n\nconst app = http.createServer((request, response) => {\n  let filePath = path.join(__dirname, 'public', request.url);\n  if (filePath === path.join(__dirname, 'public', '/')) filePath = path.join(__dirname, 'public', 'index.html');\n\n  const extname = String(path.extname(filePath)).toLowerCase();\n  const contentType = mimeTypes[extname] || 'application/octet-stream';\n\n  fs.readFile(filePath, (error, content) => {\n    if (error) {\n      response.writeHead(500);\n      response.end(`Sorry, check with the site admin for error: ${error.code} ..\\n`);\n      response.end();\n    } else {\n      response.writeHead(200, { 'Content-Type': contentType });\n      response.end(content, 'utf-8');\n    }\n  });\n});\n\nmodule.exports = app;","const app = require('./app');\n\nconst port = '8888';\n\napp.listen(port, () => {\n  console.log(`Server is listening on port ${port}...`);\n});"]}